name: Staging CI

on:
  push:
    branches:
      - main
  repository_dispatch:


env:
  AZURE_CONTAINER_REGISTRY: "fssstaging"
  CONTAINER_NAME: "phongtest"
  RESOURCE_GROUP: "FSS-staging"
  CLUSTER_NAME: "fss-staging"
  DEPLOYMENT_MANIFEST_PATH: "/frontend/frontend-deployment.yml"

jobs:
  buildImage:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout repository
        uses: actions/checkout@v3

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          cd frontend
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} -f frontend.dockerfile --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

  deploy:
    runs-on: ubuntu-latest
    environment: Production
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - name: debug
        run: |
          pwd

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
