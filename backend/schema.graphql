schema {
  query: RootQuery
  mutation: RootMutation
}

enum AttactType {
  range
  melee
}

enum Attribute {
  strength
  magic
  agility
}

input HeroCreateInputType {
  name: String!
  avatar: String = null
  attackType: AttactType!
  attribute: Attribute!
  baseMovement: Int!
  baseDamage: Int!
  baseHealth: Int!
}

enum HeroSkillType {
  active
  passive
}

type HeroType {
  skills: [SkillType!]!
  id: Int
  name: String!
  avatar: String
  attackType: AttactType!
  attribute: Attribute!
  baseMovement: Int!
  baseDamage: Int!
  baseHealth: Int!
}

type RootMutation {
  addHero(input: HeroCreateInputType!): HeroType!
  addHeroes(input: [HeroCreateInputType!]!): [HeroType!]!
  addSkill(input: SkillCreateInputType!): SkillType!
  addSkills(input: [SkillCreateInputType!]!): [SkillType!]!
}

type RootQuery {
  heroes: [HeroType!]!
  hero(id: ID!): HeroType
  skills: [SkillType!]!
  skill(id: ID!): SkillType
}

input SkillCreateInputType {
  name: String!
  type: HeroSkillType!
  description: String = null
  manaCost: Int!
  cooldown: Int!
  heroId: Int = null
}

type SkillType {
  hero: HeroType!
  id: Int
  name: String!
  type: HeroSkillType!
  description: String
  manaCost: Int!
  cooldown: Int!
  heroId: Int
}
